Problem Description-
A sentence is a list of words that are separated by a single space with no leading or trailing spaces. Each word consists of lowercase and uppercase English letters.

A sentence can be shuffled by appending the 1-indexed word position to each word then rearranging the words in the sentence.

For example, the sentence "This is a sentence" can be shuffled as "sentence4 a3 is2 This1" or "is2 sentence4 This1 a3".
Given a shuffled sentence s containing no more than 9 words, reconstruct and return the original sentence.

 

Example 1:

Input: s = "is2 sentence4 This1 a3"
Output: "This is a sentence"
Explanation: Sort the words in s to their original positions "This1 is2 a3 sentence4", then remove the numbers.


Code:

class Solution:
    def sortSentence(self, s: str) -> str:
        d={}
        t=s.split(' ')
        #print(t)
        out=[[''] for _ in range(len(t))]
        #print(t[0][-1])
        for i in range(len(t)):
            k=t[i]
            z=len(k)
            use=int(k[-1])
            k=k[0:z-1]
            out[use-1]=k
        #print(out)

        ans=''
        for i in range(len(out)):
            if i<len(out)-1:
                ans=ans+out[i]+" "
            else:
                ans=ans+out[i]
        return ans


Problem Source: https://leetcode.com/problems/sorting-the-sentence/solutions/4033710/sorting-the-sentence-problem-solution/
